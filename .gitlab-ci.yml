---

stages:
  - build
  - preprod
  - prod

preprod:
  stage: preprod
  image: node:14.15.0
  before_script:
    - npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
    - npm install
    - npm run buildPreprod
  script:
    - apt update
    - apt install -y rsync python3-pip
    - pip3 --no-cache-dir install ansible
    - chmod 0700 .ssh
    - chmod 0600 .ssh/id_ed25519
    - ansible-playbook --inventory hosts.yml deliverPreprod.yml
  only:
    refs:
      - development
      - /project\/.*/

prod:
  stage: prod
  image: node:14.15.0
  when: manual
  before_script:
    - npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
    - npm install
    - npm run buildProd
  script:
    - apt update
    - apt install -y rsync python3-pip
    - pip3 --no-cache-dir install ansible
    - chmod 0700 .ssh
    - chmod 0600 .ssh/id_ed25519
    - ansible-playbook --inventory hosts.yml deliverProd.yml
  only:
    refs:
      - development
      - /project\/.*/

dydubox:
  stage: build
  image: node:14.15.0
  tags: 
    - build
  script:
    - date
    - npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
    - date
    - npm ci --cache .npm --prefer-offline
    - date
    - npm run buildProd
    - date
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/
  only:
    variables: 
      - $DYDUBOX_TRIGGER == "true"
      - $CONFIGURATION_UUID
  artifacts:
    name: build-$CI_JOB_ID
    expire_in: 15m
    paths:
      - build/**
...
